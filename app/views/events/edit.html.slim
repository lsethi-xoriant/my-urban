.main-wrapper
  .content-wrapper.not-main
    = render "partials/header"
    .content.create-events
      .row
        =render 'partials/sidebar'

        
        .medium-8.small-12.columns.new-ev-form-wr
          script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places&language=en"
          .new-ev-form
            h1
              |  
              =t('events.edit_label')
            - avatar = @event.avatar&&@event.avatar.avatar.file.exists? ? @event.avatar : Avatar.new
            = form_for avatar, remote: true, :authenticity_token => true,  html: {class: 'new_avatar', id: 'new_avatar'} do |f|
              .field
                = hidden_field_tag :user_page, 'edit_event'
                = f.hidden_field :name, value: 'event'
                = link_to I18n.t('events.choose_event_image'), 'javascript:void(0);', class:"btn-4"
                = f.file_field :avatar, 'data-reveal-id' => "secondModal"
            div[id="ImageModal" class="reveal-modal" data-reveal aria-hidden="true" role="dialog"]
                a [class="close-reveal-modal" aria-label="Close"] &#215;
                h2 Image crop
                #image_edit
            = form_for(@event) do |f|
              - if @event.errors.any?
                #error_explanation
                  h2
                    = pluralize(@event.errors.count, "error")
                    |  prohibited this event from being saved:
                  ul
                    - @event.errors.full_messages.each do |message|
                      li
                        = message

              .radio_event_type
                = f.radio_button(:event_type, 'open', class: 'no_displaying', 'checked' => "checked")
                = f.label :event_type_open, I18n.t('event_type.open'), class: 'radio_type right_radio_type active'
                
                = f.radio_button :event_type, 'close', class: 'no_displaying'
                = f.label :event_type_close, I18n.t('event_type.close'), class: 'radio_type left_radio_type'
              .upload-img
              .field-category
                = f.hidden_field :avatar_id
                = f.label :category_id, t('events.choose_category')
                = f.collection_select :category_id , Category.all, :id, :title,  :prompt => ' '
              .field-name
                = f.label :name, t('events.name')
                = f.text_field :name
              .field-address
                = f.label :adress, t('events.address')
                = f.text_field :adress, :placeholder => '', id: 'autocomplete'
                table#address.hide
                  tr
                    td.label Street address
                    td.slimField
                      input#street_number.field name='event[street_number]' disabled="true" /
                    td.wideField colspan="2" 
                      input#route.field name='event[street_name]' disabled="true" /
                  tr
                    td.label City
                    td.wideField colspan="3" 
                      input#locality.field name='event[city_name]' disabled="true" /
                  tr
                    td.label State
                    td.slimField
                      input#administrative_area_level_1.field name='event[state]'disabled="true" /
                    td.label Zip code
                    td.wideField
                      input#postal_code.field name='event[zip_code]' disabled="true" /
                  tr
                    td.label Country
                    td.wideField colspan="3" 
                      input#country.field name='event[country]' disabled="true" /
              .field
                = f.label :description, t('events.description')
                = f.text_area :description
              .field-data
                = f.label :data, 'Дата *'
                = f.date_select :data, :default => Date.today
              .field-start
                = f.label :timeStart, t('events.start_time')
                = f.time_select :timeStart, prompt: ' ', :minute_step => 5
              .field-end
                = f.label :endTime, t('events.end_time')
                = f.time_select :endTime, prompt: ' ', :minute_step => 5
              .field-count
                = f.label :people_count, t('events.participants_group')
                = f.select :people_count, Event.counts_of_people, :selected => 'little'
              .invite-fr
                p Запросити друзів:
                .invite-fr-links
                  = link_to t('events.your_friends'), 'javascript:void(0);', :class => 'active'
                .invite-fr-list
                  -current_user.user_friends.each do |friend|
                    - if friend.are_participation(params[:id])
                      .invite-fr-list-item.invited
                        = link_to 'javascript:void(0);' do
                        - if friend.avatar&&friend.avatar.avatar.file.exists?
                          = image_tag friend.avatar.avatar_url(:small)
                        - else
                          = image_tag "user-sm-2.jpg"                       
                        = link_to friend.first_name + " " + friend.last_name, 'javascript:void(0);'
                        = check_box_tag 'invites[]', friend.id, false, {class: 'invite_check invisible'}
                    -else 
                      .invite-fr-list-item
                        = link_to 'javascript:void(0);' do
                        - if friend.avatar&&friend.avatar.avatar.file.exists?
                          = image_tag friend.avatar.avatar_url(:small), class: 'user_for_invite'
                        - else
                          = image_tag "user-sm-2.jpg", class: 'user_for_invite'                       
                        = link_to friend.first_name + " " + friend.last_name, 'javascript:void(0);', class: 'user_for_invite'
                        = check_box_tag 'invites[]', friend.id, false, {class: 'invite_check invisible'}

                .field.hide
                  = f.label :reg_type, t('events.reg_type')
                  = f.select :reg_type, Event.replenishment, selected: Event.replenishment[1]
                  /  :prompt => ' '


                = f.hidden_field :user_id, :value => current_user.id
                .actions
                  = f.submit 'Редагувати', :class => 'btn-2 btn-3', id: 'inputId'


    = render "partials/footer"


